[{"/home/bayle/Documents/git/robotsquiggles/web-react/src/index.tsx":"1","/home/bayle/Documents/git/robotsquiggles/web-react/src/reportWebVitals.ts":"2","/home/bayle/Documents/git/robotsquiggles/web-react/src/App.tsx":"3","/home/bayle/Documents/git/robotsquiggles/web-react/src/components/index.ts":"4","/home/bayle/Documents/git/robotsquiggles/web-react/src/components/field.jsx":"5","/home/bayle/Documents/git/robotsquiggles/web-react/src/three/test.jsx":"6","/home/bayle/Documents/git/robotsquiggles/web-react/src/three/spline-example.jsx":"7","/home/bayle/Documents/git/robotsquiggles/web-react/src/components/path.jsx":"8"},{"size":600,"mtime":1609009360582,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1608741115116,"results":"11","hashOfConfig":"10"},{"size":585,"mtime":1608742065972,"results":"12","hashOfConfig":"10"},{"size":49,"mtime":1609009383086,"results":"13","hashOfConfig":"10"},{"size":4474,"mtime":1609009800824,"results":"14","hashOfConfig":"10"},{"size":4149,"mtime":1608758716969,"results":"15","hashOfConfig":"10"},{"size":2785,"mtime":1608774911233,"results":"16","hashOfConfig":"10"},{"size":4400,"mtime":1609010206973,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"7xnx51",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/bayle/Documents/git/robotsquiggles/web-react/src/index.tsx",["39"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./three/spline-example\";\nimport { Field, Path } from \"./components\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <Field />\n    <Path />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["40","41"],"/home/bayle/Documents/git/robotsquiggles/web-react/src/reportWebVitals.ts",[],"/home/bayle/Documents/git/robotsquiggles/web-react/src/App.tsx",["42"],"/home/bayle/Documents/git/robotsquiggles/web-react/src/components/index.ts",[],"/home/bayle/Documents/git/robotsquiggles/web-react/src/components/field.jsx",[],["43","44"],"/home/bayle/Documents/git/robotsquiggles/web-react/src/three/test.jsx",["45","46","47","48"],"/home/bayle/Documents/git/robotsquiggles/web-react/src/three/spline-example.jsx",["49"],"import React, { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nconst rand_gray = () => {\n  var value = Math.random() * 0xf + 0x50;\n  return (value << 16) | (value << 8) | value;\n};\n\nexport const App = (props) => {\n  const mount = useRef(null);\n\n  useEffect(() => {\n    var renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    mount.current.appendChild(renderer.domElement);\n\n    var scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf0f0f0);\n\n    var camera = new THREE.PerspectiveCamera(\n      70,\n      window.innerWidth / window.innerHeight,\n      1,\n      10000\n    );\n    camera.position.set(0, 250, 1000);\n    scene.add(camera);\n\n    scene.add(new THREE.AmbientLight(0xf0f0f0));\n    const light = new THREE.SpotLight(0xffffff, 1.5);\n    light.position.set(0, 1500, 200);\n    light.angle = Math.PI * 0.2;\n    light.castShadow = true;\n    light.shadow.camera.near = 200;\n    light.shadow.camera.far = 2000;\n    light.shadow.bias = -0.000222;\n    light.shadow.mapSize.width = 1024;\n    light.shadow.mapSize.height = 1024;\n    scene.add(light);\n\n    const planeGeometry = new THREE.PlaneBufferGeometry(2000, 2000);\n    planeGeometry.rotateX(-Math.PI / 2);\n    const planeMaterial = new THREE.ShadowMaterial({ opacity: 0.2 });\n\n    const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n    plane.position.y = -200;\n    plane.receiveShadow = true;\n    scene.add(plane);\n\n    const helper = new THREE.GridHelper(2000, 100);\n    helper.position.y = -199;\n    helper.material.opacity = 0.25;\n    helper.material.transparent = true;\n    scene.add(helper);\n\n    // Render helper function\n    const render = () => {\n      renderer.render(scene, camera);\n    };\n    render();\n\n    // Controls\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.damping = 0.2;\n    controls.addEventListener(\"change\", render);\n\n    // transformControl = new TransformControls(camera, renderer.domElement);\n    // transformControl.addEventListener(\"change\", render);\n    // transformControl.addEventListener(\"dragging-changed\", function (event) {\n    //   controls.enabled = !event.value;\n    // });\n    // scene.add(transformControl);\n\n    // transformControl.addEventListener(\"objectChange\", function () {\n    //   updateSplineOutline();\n    // });\n\n    // document.addEventListener(\"pointerdown\", onPointerDown, false);\n    // document.addEventListener(\"pointerup\", onPointerUp, false);\n    // document.addEventListener(\"pointermove\", onPointerMove, false);\n  });\n\n  return <div ref={mount} />;\n};\n",["50","51"],"/home/bayle/Documents/git/robotsquiggles/web-react/src/components/path.jsx",[],{"ruleId":"52","severity":1,"message":"53","line":4,"column":10,"nodeType":"54","messageId":"55","endLine":4,"endColumn":13},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"52","severity":1,"message":"60","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":11},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":16},{"ruleId":"61","severity":1,"message":"63","line":4,"column":10,"nodeType":"54","messageId":"55","endLine":4,"endColumn":16},{"ruleId":"61","severity":1,"message":"64","line":13,"column":7,"nodeType":"54","messageId":"55","endLine":13,"endColumn":21},{"ruleId":"61","severity":1,"message":"65","line":16,"column":9,"nodeType":"54","messageId":"55","endLine":16,"endColumn":16},{"ruleId":"61","severity":1,"message":"66","line":5,"column":7,"nodeType":"54","messageId":"55","endLine":5,"endColumn":16},{"ruleId":"56","replacedBy":"67"},{"ruleId":"58","replacedBy":"68"},"@typescript-eslint/no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["69"],"no-negated-in-lhs",["70"],"'Two' is defined but never used.","no-unused-vars","'ReactDOM' is defined but never used.","'Vector' is defined but never used.","'TILE_THICKNESS' is assigned a value but never used.","'min_dim' is assigned a value but never used.","'rand_gray' is assigned a value but never used.",["69"],["70"],"no-global-assign","no-unsafe-negation"]